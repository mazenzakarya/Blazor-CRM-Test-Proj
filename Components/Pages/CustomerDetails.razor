@page "/customers/{CustomerId:int}"
@using Blazor_CRM_Test_Proj.Models
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation
@inject IJSRuntime JS
@rendermode InteractiveServer

<PageTitle>Customer Details - CRM</PageTitle>

@if (customer == null)
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                @if (isLoading)
                {
                    <div class="text-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p>Loading customer details...</p>
                    </div>
                }
                else
                {
                    <div class="alert alert-warning" role="alert">
                        <h4 class="alert-heading">Customer Not Found</h4>
                        <p>The customer you're looking for doesn't exist or has been removed.</p>
                        <hr>
                        <a href="/customers" class="btn btn-primary">Back to Customers</a>
                    </div>
                }
            </div>
        </div>
    </div>
}
else
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2>Customer Details</h2>
                    <div>
                        <button class="btn btn-outline-secondary me-2" @onclick="EditCustomer">
                            <i class="bi bi-pencil"></i> Edit Customer
                        </button>
                        <button class="btn btn-outline-danger me-2" @onclick="DeleteCustomer">
                            <i class="bi bi-trash"></i> Delete Customer
                        </button>
                        <a href="/customers" class="btn btn-primary">
                            <i class="bi bi-arrow-left"></i> Back to Customers
                        </a>
                    </div>
                </div>

                <!-- Customer Information -->
                <div class="row">
                    <div class="col-md-8">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="bi bi-person"></i> Customer Information
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h6>Name</h6>
                                        <p class="text-muted">@customer.FirstName @customer.LastName</p>
                                    </div>
                                    <div class="col-md-6">
                                        <h6>Email</h6>
                                        <p class="text-muted">
                                            <a href="mailto:@customer.Email" class="text-decoration-none">@customer.Email</a>
                                        </p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <h6>Phone</h6>
                                        <p class="text-muted">@(customer.Phone ?? "Not provided")</p>
                                    </div>
                                    <div class="col-md-6">
                                        <h6>Company</h6>
                                        <p class="text-muted">@(customer.Company ?? "Not provided")</p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12">
                                        <h6>Address</h6>
                                        <p class="text-muted">@(customer.Address ?? "Not provided")</p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <h6>Status</h6>
                                        @if (customer.IsActive)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Inactive</span>
                                        }
                                    </div>
                                    <div class="col-md-6">
                                        <h6>Created Date</h6>
                                        <p class="text-muted">@customer.CreatedDate.ToString("MMM dd, yyyy")</p>
                                    </div>
                                </div>
                                @if (customer.LastContactDate.HasValue)
                                {
                                    <div class="row">
                                        <div class="col-md-6">
                                            <h6>Last Contact</h6>
                                            <p class="text-muted">@customer.LastContactDate.Value.ToString("MMM dd, yyyy")</p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <!-- Quick Actions -->
                        <div class="card mb-3">
                            <div class="card-header">
                                <h6 class="card-title mb-0">Quick Actions</h6>
                            </div>
                            <div class="card-body">
                                <div class="d-grid gap-2">
                                    <button class="btn btn-outline-primary" @onclick="AddContact">
                                        <i class="bi bi-plus-circle"></i> Add Contact
                                    </button>
                                    <button class="btn btn-outline-success" @onclick="AddOpportunity">
                                        <i class="bi bi-plus-circle"></i> Add Opportunity
                                    </button>
                                    <button class="btn btn-outline-info" @onclick="ViewContacts">
                                        <i class="bi bi-chat"></i> View Contacts
                                    </button>
                                    <button class="btn btn-outline-warning" @onclick="ViewOpportunities">
                                        <i class="bi bi-graph-up"></i> View Opportunities
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!-- Recent Activity -->
                        <div class="card">
                            <div class="card-header">
                                <h6 class="card-title mb-0">Recent Activity</h6>
                            </div>
                            <div class="card-body">
                                <p class="text-muted small">
                                    @if (customer.LastContactDate.HasValue)
                                    {
                                        <span>Last contact: @customer.LastContactDate.Value.ToString("MMM dd, yyyy")</span>
                                    }
                                    else
                                    {
                                        <span>No recent activity</span>
                                    }
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Contacts Section -->
                @if (contacts != null && contacts.Any())
                {
                    <div class="row mt-4">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h5 class="card-title mb-0">
                                        <i class="bi bi-chat"></i> Recent Contacts
                                    </h5>
                                    <button class="btn btn-sm btn-outline-primary" @onclick="ViewAllContacts">
                                        View All
                                    </button>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-sm">
                                            <thead>
                                                <tr>
                                                    <th>Date</th>
                                                    <th>Subject</th>
                                                    <th>Type</th>
                                                    <th>Follow-up</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var contact in contacts.Take(5))
                                                {
                                                    <tr>
                                                        <td>@contact.ContactDate.ToString("MMM dd, yyyy")</td>
                                                        <td>@contact.Subject</td>
                                                        <td>
                                                            <span class="badge bg-info">@contact.ContactType</span>
                                                        </td>
                                                        <td>
                                                            @if (contact.IsFollowUpRequired)
                                                            {
                                                                <span class="badge bg-warning">Required</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">-</span>
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <!-- Opportunities Section -->
                @if (opportunities != null && opportunities.Any())
                {
                    <div class="row mt-4">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h5 class="card-title mb-0">
                                        <i class="bi bi-graph-up"></i> Opportunities
                                    </h5>
                                    <button class="btn btn-sm btn-outline-primary" @onclick="ViewAllOpportunities">
                                        View All
                                    </button>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-sm">
                                            <thead>
                                                <tr>
                                                    <th>Title</th>
                                                    <th>Status</th>
                                                    <th>Value</th>
                                                    <th>Expected Close</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var opportunity in opportunities.Take(5))
                                                {
                                                    <tr>
                                                        <td>@opportunity.Title</td>
                                                        <td>
                                                            <span class="badge bg-@(GetStatusBadgeColor(opportunity.Status))">@opportunity.Status</span>
                                                        </td>
                                                        <td>@opportunity.EstimatedValue.ToString("C")</td>
                                                        <td>
                                                            @if (opportunity.ExpectedCloseDate.HasValue)
                                                            {
                                                                @opportunity.ExpectedCloseDate.Value.ToString("MMM dd, yyyy")
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">-</span>
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int CustomerId { get; set; }

    private Customer? customer;
    private List<Contact>? contacts;
    private List<Opportunity>? opportunities;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadCustomerDetails();
    }

    private async Task LoadCustomerDetails()
    {
        isLoading = true;
        try
        {
            var httpClient = HttpClientFactory.CreateClient("ApiClient");
            
            // Load customer details
            customer = await httpClient.GetFromJsonAsync<Customer>($"api/customers/{CustomerId}");
            
            if (customer != null)
            {
                // Load related data
                contacts = await httpClient.GetFromJsonAsync<List<Contact>>($"api/contacts/customer/{CustomerId}");
                opportunities = await httpClient.GetFromJsonAsync<List<Opportunity>>($"api/opportunities/customer/{CustomerId}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading customer details: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void EditCustomer()
    {
        Navigation.NavigateTo($"/customers");
    }

    private async Task DeleteCustomer()
    {
        if (await JS.InvokeAsync<bool>("confirm", "Are you sure you want to delete this customer?"))
        {
            try
            {
                var httpClient = HttpClientFactory.CreateClient("ApiClient");
                var response = await httpClient.DeleteAsync($"api/customers/{CustomerId}");
                if (response.IsSuccessStatusCode)
                {
                    Navigation.NavigateTo("/customers");
                }
                else
                {
                    await JS.InvokeAsync<string>("alert", "Error deleting customer");
                }
            }
            catch (Exception ex)
            {
                await JS.InvokeAsync<string>("alert", $"Error: {ex.Message}");
            }
        }
    }

    private void AddContact()
    {
        // Navigate to contacts page with customer ID pre-filled
        Navigation.NavigateTo($"/contacts/add/{CustomerId}");
    }

    private void AddOpportunity()
    {
        // Navigate to opportunities page with customer ID pre-filled
        Navigation.NavigateTo($"/opportunities/add/{CustomerId}");
    }

    private void ViewContacts()
    {
        Navigation.NavigateTo($"/contacts/customer/{CustomerId}");
    }

    private void ViewOpportunities()
    {
        Navigation.NavigateTo($"/opportunities/customer/{CustomerId}");
    }

    private void ViewAllContacts()
    {
        Navigation.NavigateTo($"/contacts/customer/{CustomerId}");
    }

    private void ViewAllOpportunities()
    {
        Navigation.NavigateTo($"/opportunities/customer/{CustomerId}");
    }

    private string GetStatusBadgeColor(string status)
    {
        return status switch
        {
            "New" => "primary",
            "Qualified" => "info",
            "Proposal" => "warning",
            "Negotiation" => "secondary",
            "Closed Won" => "success",
            "Closed Lost" => "danger",
            _ => "secondary"
        };
    }
}
