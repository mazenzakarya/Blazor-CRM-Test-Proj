// <auto-generated />
using System;
using Blazor_CRM_Test_Proj.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorCRMTestProj.Migrations
{
    [DbContext(typeof(CrmDbContext))]
    partial class CrmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blazor_CRM_Test_Proj.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ContactDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ContactType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FollowUpDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFollowUpRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactDate = new DateTime(2025, 8, 30, 18, 46, 21, 596, DateTimeKind.Utc).AddTicks(6362),
                            ContactType = "Phone",
                            CustomerId = 1,
                            FollowUpDate = new DateTime(2025, 9, 29, 18, 46, 21, 596, DateTimeKind.Utc).AddTicks(6365),
                            IsFollowUpRequired = true,
                            Message = "First contact with the customer to discuss their needs.",
                            Subject = "Initial Contact"
                        },
                        new
                        {
                            Id = 2,
                            ContactDate = new DateTime(2025, 9, 14, 18, 46, 21, 596, DateTimeKind.Utc).AddTicks(6369),
                            ContactType = "Meeting",
                            CustomerId = 2,
                            IsFollowUpRequired = false,
                            Message = "Demonstrated our CRM solution to the customer.",
                            Subject = "Product Demo"
                        });
                });

            modelBuilder.Entity("Blazor_CRM_Test_Proj.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastContactDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St, New York, NY 10001",
                            Company = "Acme Corp",
                            CreatedDate = new DateTime(2025, 8, 25, 18, 46, 21, 596, DateTimeKind.Utc).AddTicks(6195),
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            IsActive = true,
                            LastName = "Doe",
                            Phone = "+1-555-0123"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave, Los Angeles, CA 90210",
                            Company = "Tech Solutions Inc",
                            CreatedDate = new DateTime(2025, 9, 9, 18, 46, 21, 596, DateTimeKind.Utc).AddTicks(6203),
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            IsActive = true,
                            LastName = "Smith",
                            Phone = "+1-555-0456"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine St, Chicago, IL 60601",
                            Company = "Global Enterprises",
                            CreatedDate = new DateTime(2025, 9, 17, 18, 46, 21, 596, DateTimeKind.Utc).AddTicks(6207),
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            IsActive = true,
                            LastName = "Johnson",
                            Phone = "+1-555-0789"
                        });
                });

            modelBuilder.Entity("Blazor_CRM_Test_Proj.Models.Opportunity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualCloseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ActualValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("EstimatedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ExpectedCloseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Opportunities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 9, 4, 18, 46, 21, 596, DateTimeKind.Utc).AddTicks(6399),
                            CustomerId = 1,
                            Description = "Full CRM system implementation for Acme Corp",
                            EstimatedValue = 50000.00m,
                            ExpectedCloseDate = new DateTime(2025, 10, 24, 18, 46, 21, 596, DateTimeKind.Utc).AddTicks(6397),
                            Status = "Proposal",
                            Title = "CRM Implementation"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 9, 19, 18, 46, 21, 596, DateTimeKind.Utc).AddTicks(6405),
                            CustomerId = 2,
                            Description = "Annual software license for Tech Solutions",
                            EstimatedValue = 25000.00m,
                            ExpectedCloseDate = new DateTime(2025, 10, 9, 18, 46, 21, 596, DateTimeKind.Utc).AddTicks(6402),
                            Status = "Negotiation",
                            Title = "Software License"
                        });
                });

            modelBuilder.Entity("Blazor_CRM_Test_Proj.Models.Contact", b =>
                {
                    b.HasOne("Blazor_CRM_Test_Proj.Models.Customer", "Customer")
                        .WithMany("Contacts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Blazor_CRM_Test_Proj.Models.Opportunity", b =>
                {
                    b.HasOne("Blazor_CRM_Test_Proj.Models.Customer", "Customer")
                        .WithMany("Opportunities")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Blazor_CRM_Test_Proj.Models.Customer", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Opportunities");
                });
#pragma warning restore 612, 618
        }
    }
}
